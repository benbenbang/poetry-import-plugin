name: semantic release & release to pypi

on:
  workflow_dispatch:
    inputs:
      prompt:
        description: "If you are sure to launch a new release, put the value to true."
        default: "false"
        type: choice
        options:
          - "true"
          - "false"

permissions:
  contents: write
  issues: write
  pull-requests: write
  packages: write
  statuses: write

jobs:
  semantic-release:
    if: github.event.inputs.prompt == 'true'
    uses: benbenbang/poetry-import-plugin/.github/workflows/reusable-sr.yml@workflows
    secrets: inherit

  update-release-title:
    runs-on: ubuntu-latest
    needs: semantic-release
    if: ${{ needs.semantic-release.outputs.new_release != null }}
    steps:
      - uses: actions/checkout@v4
      - name: update github release
        run: |
          gh release edit -R ${{ github.repository }} --title "⚙️ Poetry Import Plugin ${{ needs.semantic-release.outputs.new_release_tag }}" "${{ needs.semantic-release.outputs.new_release_tag }}"
        env:
          GH_TOKEN: ${{ github.token }}

  publish:
    name: publish to pypi
    runs-on: ubuntu-latest
    needs:
      - semantic-release
      - update-release-title
    if: ${{ needs.semantic-release.outputs.new_release != null }}
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: setup python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: build & publish to pypi
        run: |
          echo "Building and deploying the package"
          echo "Release candidate: ${{ needs.semantic-release.outputs.new_release_tag }}"

          # install dependency
          pipx install poetry

          # update the package version
          pipx run poetry version ${{ needs.semantic-release.outputs.new_release_tag }}

          # build the package and publish
          rm -rf dist
          pipx run poetry publish --build --username __token__ --password ${{ secrets.PYPI_TOKEN }}
